{"version":3,"names":["Appearance","NativeModules","Platform","StatusBar","processColor","NavigationBar","navigationHide","OS","navigationShow","leanBack","enabled","state","immersive","stickyImmersive","lowProfile","getBarModeTypes","style","bar","modeStyle","LIGHT","DARK","NO_MODE","mode","NAVIGATION_BAR","STATUS_BAR","NAVIGATION_BAR_STATUS_BAR","setBarMode","setNavigationColor","color","setNavigationBarDividerColor","setNavigationBarContrastEnforced","fullScreen","getBarColor","result","JSON","parse","setFitsSystemWindows","console","log","theme","barTheme","scheme","getColorScheme","navigation","setBackgroundColor","SystemNavigationBar"],"sources":["index.tsx"],"sourcesContent":["import {\n  Appearance,\n  NativeModules,\n  Platform,\n  StatusBar,\n  processColor\n} from 'react-native';\n\nconst { NavigationBar } = NativeModules;\n\nconst navigationHide = async () => {\n  if (Platform.OS === 'android') {\n    return await NavigationBar.navigationHide();\n  }\n};\n\nconst navigationShow = async () => {\n  if (Platform.OS === 'android') {\n    return await NavigationBar.navigationShow();\n  }\n};\n\nconst leanBack = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.leanBack(state);\n  }\n};\n\nconst immersive = async () => {\n  if (Platform.OS === 'android') {\n    return await NavigationBar.immersive();\n  }\n};\n\nconst stickyImmersive = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.stickyImmersive(state);\n  }\n};\n\nconst lowProfile = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.lowProfile(state);\n  }\n};\n\nconst getBarModeTypes = (\n  style?: 'light' | 'dark',\n  bar?: 'navigation' | 'status' | 'both'\n) => {\n  const modeStyle =\n    style === 'light'\n      ? NavigationBar.LIGHT\n      : style === 'dark'\n        ? NavigationBar.DARK\n        : NavigationBar.NO_MODE;\n\n  const mode =\n    bar === 'navigation'\n      ? NavigationBar.NAVIGATION_BAR\n      : bar === 'status'\n        ? NavigationBar.STATUS_BAR\n        : NavigationBar.NAVIGATION_BAR_STATUS_BAR;\n\n  return {\n    modeStyle,\n    mode,\n  };\n};\n\nconst setBarMode = async (\n  style?: 'light' | 'dark',\n  bar?: 'navigation' | 'status' | 'both'\n) => {\n  if (Platform.OS === 'android') {\n    const { modeStyle, mode } = getBarModeTypes(style, bar);\n    return await NavigationBar.setBarMode(modeStyle, mode);\n  }\n};\n\nconst setNavigationColor = async (\n  color: string | number,\n  style?: 'light' | 'dark',\n  bar?: 'navigation' | 'status' | 'both'\n) => {\n  if (Platform.OS === 'android') {\n    const { modeStyle, mode } = getBarModeTypes(style, bar);\n    return await NavigationBar.setNavigationColor(\n      color === 'translucent' ? 0 : processColor(color),\n      color === 'translucent',\n      modeStyle,\n      mode\n    );\n  }\n};\n\nconst setNavigationBarDividerColor = async (color: string | number) => {\n  if (Platform.OS === 'android') {\n    return await NavigationBar.setNavigationBarDividerColor(\n      processColor(color)\n    );\n  }\n};\n\nconst setNavigationBarContrastEnforced = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.setNavigationBarContrastEnforced(state);\n  }\n};\n\nconst fullScreen = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.fullScreen(state);\n  }\n};\n\nexport type GetBarColorType = string | { status: string; navigation: string };\n\nconst getBarColor = async (\n  bar?: 'navigation' | 'status' | 'both'\n): Promise<GetBarColorType> => {\n  if (Platform.OS === 'android') {\n    const { mode } = getBarModeTypes('light', bar || 'both');\n    const result = await NavigationBar.getBarColor(mode);\n\n    if (mode === NavigationBar.NAVIGATION_BAR_STATUS_BAR) {\n      return JSON.parse(result);\n    } else {\n      return result;\n    }\n  }\n  return '';\n};\n\nconst setFitsSystemWindows = async (enabled?: boolean) => {\n  if (Platform.OS === 'android') {\n    const state = typeof enabled === 'boolean' ? enabled : true;\n    return await NavigationBar.setFitsSystemWindows(state);\n  }\n};\n\nexport type BarTheme = {\n  navigation: {\n    dark: string;\n    light: string;\n  },\n  status: {\n    dark: string;\n    light: string;\n  },\n};\n\nconsole.log()\n\nconst theme = async (barTheme: BarTheme) => {\n  const scheme = Appearance.getColorScheme();\n  const mode = scheme === \"dark\" ? \"dark\" : \"light\";\n\n  setNavigationColor(barTheme.navigation[mode], mode, \"both\");\n  StatusBar.setBackgroundColor(barTheme.navigation[mode], true);\n};\n\nvar SystemNavigationBar = {\n  navigationHide,\n  navigationShow,\n  leanBack,\n  immersive,\n  stickyImmersive,\n  lowProfile,\n  setBarMode,\n  setNavigationColor,\n  setNavigationBarDividerColor,\n  setNavigationBarContrastEnforced,\n  fullScreen,\n  getBarColor,\n  setFitsSystemWindows,\n  theme,\n};\n\nexport default SystemNavigationBar;\n"],"mappings":"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"}